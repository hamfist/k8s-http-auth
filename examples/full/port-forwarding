#!/usr/bin/env bash
set -o errexit
set -o pipefail

main() {
  local cmd="${1}"

  : "${STATE_DIR:=.}"
  : "${LOCALPORT:=18080}"

  local pid_file="${STATE_DIR}/port-forward.pid"
  local log_file="${STATE_DIR}/port-forward.log"
  local local_url="http://127.0.0.1:${LOCALPORT}"
  local curl_get=(curl --connect-timeout 5 -fs)

  case "${cmd}" in
  start)
    local pid
    if [[ -f "${pid_file}" ]] && "${curl_get[@]}" "${local_url}/healthz" &>/dev/null; then
      pid="$(cat "${pid_file}")"
    else
      nohup \
        kubectl \
          -v=10 \
          -n k8s-http-auth-system \
          --address 0.0.0.0 \
          port-forward svc/api \
          "${LOCALPORT}:8080" &>>"${log_file}" &
      pid="${!}"
    fi
    echo "${pid}" | tee "${pid_file}" &>/dev/null
    printf 'INFO: started with pid %s at %s\n' "${pid}" "${local_url}"
    ;;
  stop)
    if [[ ! -f "${pid_file}" ]]; then
      printf 'INFO: presumably stopped due to no pid file present at %s\n' "${pid_file}"
      exit 0
    fi
    local pid
    pid="$(cat "${pid_file}")"
    kill "${pid}"
    rm -f "${pid_file}"
    printf 'INFO: stopped\n'
    ;;
  status)
    if [[ ! -f "${pid_file}" ]]; then
      printf 'INFO: presumably stopped due to no pid file present at %s\n' "${pid_file}"
      exit 0
    fi
    local pid
    pid="$(cat "${pid_file}")"
    if "${curl_get[@]}" "${local_url}/healthz" &>/dev/null; then
      printf 'INFO: presumably started with pid %s\n' "${pid}"
      exit 0
    fi
    printf 'ERROR: presumably not started (stale pid?)\n'
    exit 86
    ;;
  *)
    printf 'ERROR: unknown command %s\n' "${cmd}"
    exit 86
    ;;
  esac
}

main "${@}"
